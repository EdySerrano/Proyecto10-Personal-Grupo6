From 55c5c837694fef0a3812e0db50fc3a4191e1c263 Mon Sep 17 00:00:00 2001
From: OliverHz28 <oliver_28z@hotmail.com>
Date: Sat, 7 Jun 2025 13:01:31 -0500
Subject: [PATCH 01/15] =?UTF-8?q?inicializar=20configuraci=C3=B3n=20del=20?=
 =?UTF-8?q?proyecto?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .github/workflows/pr_validation.yaml | 0
 README.md                            | 9 +++++++++
 pr_simulation/.gitkeep               | 0
 scripts/lint_all.sh                  | 1 +
 src/config_modifier.py               | 0
 tests/test_config_modifier.py        | 0
 6 files changed, 10 insertions(+)
 create mode 100644 .github/workflows/pr_validation.yaml
 create mode 100644 README.md
 create mode 100644 pr_simulation/.gitkeep
 create mode 100644 scripts/lint_all.sh
 create mode 100644 src/config_modifier.py
 create mode 100644 tests/test_config_modifier.py

diff --git a/.github/workflows/pr_validation.yaml b/.github/workflows/pr_validation.yaml
new file mode 100644
index 0000000..e69de29
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..c2097b0
--- /dev/null
+++ b/README.md
@@ -0,0 +1,9 @@
+# Grupo 6 - PC3-proyecto10
+
+## Team
+
+| Miembro del Equipo | Repositorio Principal |
+| :----------------- | :-------------------- | 
+| **Choquecambi Germain** |  |
+| **Serrano Edy** | | 
+| **Hinojosa Frank** |   | 
\ No newline at end of file
diff --git a/pr_simulation/.gitkeep b/pr_simulation/.gitkeep
new file mode 100644
index 0000000..e69de29
diff --git a/scripts/lint_all.sh b/scripts/lint_all.sh
new file mode 100644
index 0000000..f1f641a
--- /dev/null
+++ b/scripts/lint_all.sh
@@ -0,0 +1 @@
+#!/usr/bin/env bash
diff --git a/src/config_modifier.py b/src/config_modifier.py
new file mode 100644
index 0000000..e69de29
diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
new file mode 100644
index 0000000..e69de29
-- 
2.45.1.windows.1


From 5f66faf8000d45f6cbe3ef54e537b88f0c3af201 Mon Sep 17 00:00:00 2001
From: Frank Hinojosa <124078849+OliverHz28@users.noreply.github.com>
Date: Sat, 7 Jun 2025 18:15:29 -0500
Subject: [PATCH 02/15] feat : Agregar historias de usuario

Propuesta para la
---
 .github/ISSUE_TEMPLATE/user-story.md | 38 ++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)
 create mode 100644 .github/ISSUE_TEMPLATE/user-story.md

diff --git a/.github/ISSUE_TEMPLATE/user-story.md b/.github/ISSUE_TEMPLATE/user-story.md
new file mode 100644
index 0000000..68544a3
--- /dev/null
+++ b/.github/ISSUE_TEMPLATE/user-story.md
@@ -0,0 +1,38 @@
+---
+name: User Story
+about: Describe this issue template's purpose here.
+title: ''
+labels: ''
+assignees: ''
+
+---
+
+---
+name: User Story
+about: Template for defining clear and structured user stories
+title: "[User Story] <Short Title>"
+labels: ["user story"]
+assignees: ""
+---
+
+## User story  
+
+**As a** _(specific role - e.g., "developer," "admin," "customer")_  
+**I need** _(clear functionality or feature needed)_  
+**So that** _(explain the value or business reason for this feature)_
+
+---
+
+##  **Context & Assumptions**  
+- _List any known constraints, assumptions, or dependencies._
+- _Mention related user stories or issues (if applicable)._
+
+---
+
+##  **Acceptance criteria**  
+```gherkin
+Scenario: <Short Description>
+Given <initial context or system state>
+When <user performs an action>
+Then <expected outcome or behavior>
+And <optional additional conditions>
-- 
2.45.1.windows.1


From 9bad8909521f5d3768b34677f689bd3c1ccf6192 Mon Sep 17 00:00:00 2001
From: Frank Hinojosa <124078849+OliverHz28@users.noreply.github.com>
Date: Sun, 8 Jun 2025 19:03:06 -0500
Subject: [PATCH 03/15] merge[#4]: feature/config-modifier a feature/develop
 (#6)

* feat(json): agregar config.json

* feat(py): crear config_modifier.py para leer archivos .json

* feat(structure): crear .gitignore requirements.txt

* feat(refactor): agregar incrementar_version en config_modifier.py
---
 .gitignore             |  2 ++
 config.json            |  5 +++++
 main.py                |  7 +++++++
 requirements.txt       |  1 +
 src/config_modifier.py | 37 +++++++++++++++++++++++++++++++++++++
 5 files changed, 52 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 config.json
 create mode 100644 main.py
 create mode 100644 requirements.txt

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..3cf8c6d
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,2 @@
+env
+__pycache__
\ No newline at end of file
diff --git a/config.json b/config.json
new file mode 100644
index 0000000..018ae14
--- /dev/null
+++ b/config.json
@@ -0,0 +1,5 @@
+{
+    "version": 2.0,
+    "name": "Proyecto - PC3",
+    "team": "Grupo 6"
+}
\ No newline at end of file
diff --git a/main.py b/main.py
new file mode 100644
index 0000000..fec53dc
--- /dev/null
+++ b/main.py
@@ -0,0 +1,7 @@
+from src.config_modifier import leer_json, incrementar_version
+
+data = leer_json("config.json")
+print(data)
+
+numero_version = incrementar_version("config.json")
+print(f"Nueva versión: {numero_version}")
diff --git a/requirements.txt b/requirements.txt
new file mode 100644
index 0000000..55b033e
--- /dev/null
+++ b/requirements.txt
@@ -0,0 +1 @@
+pytest
\ No newline at end of file
diff --git a/src/config_modifier.py b/src/config_modifier.py
index e69de29..b56b5e7 100644
--- a/src/config_modifier.py
+++ b/src/config_modifier.py
@@ -0,0 +1,37 @@
+import json
+import os
+
+
+def leer_json(file_path):
+    """
+    Lee el archivo JSON desde el sistema de archivos y
+    devuelve su contenido como un diccionario
+    """
+
+    if not os.path.exists(file_path):
+        raise FileNotFoundError(f"No existe el archivo '{file_path}'")
+
+    with open(file_path, 'r', encoding='utf-8') as f:
+        try:
+            return json.load(f)
+        except json.JSONDecodeError:
+            raise ValueError(f"El archivo '{file_path}' no contiene un JSON válido")
+
+
+def incrementar_version(file_path):
+    """
+    Incrementa el campo "version" del archivo JSON
+    """
+
+    config = leer_json(file_path)
+
+    if "version" not in config:
+        raise KeyError("No existe el campo 'version' en el archivo JSON")
+
+    if not isinstance(config['version'], (int, float)):
+        raise TypeError("El campo 'version' no es un número")
+
+    config["version"] += 1
+    with open(file_path, 'w', encoding='utf-8') as f:
+        json.dump(config, f, indent=4)
+    return config["version"]
-- 
2.45.1.windows.1


From aec8cf0afe0260caf081cb439cf6bd18a2dbfbba Mon Sep 17 00:00:00 2001
From: edysaul20000 <edysaulserrano@gmail.com>
Date: Sun, 8 Jun 2025 20:38:26 -0500
Subject: [PATCH 04/15] test[#2]: agregando test json_de_prueba en
 test_config_modifier.py

---
 .gitignore                    |  2 +-
 tests/test_config_modifier.py | 15 +++++++++++++++
 2 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/.gitignore b/.gitignore
index 3cf8c6d..b0b4ebb 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,2 @@
-env
+pc3
 __pycache__
\ No newline at end of file
diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index e69de29..f65c1ef 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -0,0 +1,15 @@
+# tests/test_config_modifier.py
+
+import pytest
+import json
+import os
+from src.config_modifier import leer_json, incrementar_version
+
+# Preparamos un archivo temporal para pruebas
+@pytest.fixture
+def json_de_prueba(tmp_path):
+    file_path = tmp_path / "config.json"
+    data = {"version": 1.0, "name": "Test App"}
+    with open(file_path, 'w') as f:
+        json.dump(data, f)
+    return file_path
\ No newline at end of file
-- 
2.45.1.windows.1


From d8c3382152c8d18849684a1efdc26b5487a8f243 Mon Sep 17 00:00:00 2001
From: edysaul20000 <edysaulserrano@gmail.com>
Date: Sun, 8 Jun 2025 20:47:31 -0500
Subject: [PATCH 05/15] test[#2]: agregando test test__leer_json_valido en
 test_config_modifier.py

---
 tests/test_config_modifier.py | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index f65c1ef..6b059b7 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -12,4 +12,9 @@ def json_de_prueba(tmp_path):
     data = {"version": 1.0, "name": "Test App"}
     with open(file_path, 'w') as f:
         json.dump(data, f)
-    return file_path
\ No newline at end of file
+    return file_path
+
+def test_leer_json_valido(json_de_prueba):
+    contenido = leer_json(json_de_prueba)
+    assert contenido["version"] == 1.0
+    assert contenido["name"] == "Test App"
-- 
2.45.1.windows.1


From 0a8b6a0950d9861627413b45a68295f72a7a8d35 Mon Sep 17 00:00:00 2001
From: edysaul20000 <edysaulserrano@gmail.com>
Date: Sun, 8 Jun 2025 20:53:23 -0500
Subject: [PATCH 06/15] test[#2]: agregando test test_incrementar_version en
 test_config_modifier.py

---
 tests/test_config_modifier.py | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index 6b059b7..e60f030 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -18,3 +18,10 @@ def test_leer_json_valido(json_de_prueba):
     contenido = leer_json(json_de_prueba)
     assert contenido["version"] == 1.0
     assert contenido["name"] == "Test App"
+
+def test_incrementar_version(json_de_prueba):
+    nueva_version = incrementar_version(json_de_prueba)
+    assert nueva_version == 2.0
+    with open(json_de_prueba) as f:
+        datos = json.load(f)
+    assert datos["version"] == 2.0
-- 
2.45.1.windows.1


From aabe0cf4e118dda28d516c89503b0b96e6e17822 Mon Sep 17 00:00:00 2001
From: edysaul20000 <edysaulserrano@gmail.com>
Date: Sun, 8 Jun 2025 21:02:17 -0500
Subject: [PATCH 07/15] test[#2]: agregando test test_leer_json_invalido en
 test_config_modifier.py

---
 tests/test_config_modifier.py | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index e60f030..4f93450 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -5,8 +5,8 @@ import json
 import os
 from src.config_modifier import leer_json, incrementar_version
 
-# Preparamos un archivo temporal para pruebas
 @pytest.fixture
+# Preparamos un archivo temporal para pruebas
 def json_de_prueba(tmp_path):
     file_path = tmp_path / "config.json"
     data = {"version": 1.0, "name": "Test App"}
@@ -14,14 +14,23 @@ def json_de_prueba(tmp_path):
         json.dump(data, f)
     return file_path
 
+# Preparamos un archivo JSON valido para probar la lectura correcta
 def test_leer_json_valido(json_de_prueba):
     contenido = leer_json(json_de_prueba)
     assert contenido["version"] == 1.0
     assert contenido["name"] == "Test App"
 
+# Preparamos un archivo JSON con el campo 'version' valido para probar el incremento de version
 def test_incrementar_version(json_de_prueba):
     nueva_version = incrementar_version(json_de_prueba)
     assert nueva_version == 2.0
     with open(json_de_prueba) as f:
         datos = json.load(f)
     assert datos["version"] == 2.0
+
+#Preparamos un archivo  con contenido invalido (no JSON)
+def test_leer_json_invalido(tmp_path):
+    file_path = tmp_path / "invalido.json"
+    file_path.write_text("esto no es json")
+    with pytest.raises(ValueError):
+        leer_json(file_path)
\ No newline at end of file
-- 
2.45.1.windows.1


From 67dcb439305281df84a9411acf4537d619b7edf9 Mon Sep 17 00:00:00 2001
From: edysaul20000 <edysaulserrano@gmail.com>
Date: Sun, 8 Jun 2025 21:05:10 -0500
Subject: [PATCH 08/15] test[#2]: agregando test
 test_incrementar_version_tipo_incorrecto en test_config_modifier.py

---
 tests/test_config_modifier.py | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index 4f93450..756a899 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -33,4 +33,12 @@ def test_leer_json_invalido(tmp_path):
     file_path = tmp_path / "invalido.json"
     file_path.write_text("esto no es json")
     with pytest.raises(ValueError):
-        leer_json(file_path)
\ No newline at end of file
+        leer_json(file_path)
+
+# Preparamos un archivo JSON con campo 'version' de tipo incorrecto
+def test_incrementar_version_tipo_incorrecto(tmp_path):
+    file_path = tmp_path / "version_invalida.json"
+    with open(file_path, 'w') as f:
+        json.dump({"version": "uno"}, f)
+    with pytest.raises(TypeError):
+        incrementar_version(file_path)
\ No newline at end of file
-- 
2.45.1.windows.1


From 8472d9c5b6ef78bd92a1d1e5128f27a9fdaf5059 Mon Sep 17 00:00:00 2001
From: Edy <166039525+EdySerrano@users.noreply.github.com>
Date: Sun, 8 Jun 2025 22:06:40 -0500
Subject: [PATCH 09/15] merge[#2]: feature/test a feature/develop  (#7)

* test[#2]: agregando test json_de_prueba en test_config_modifier.py

* test[#2]: agregando test test__leer_json_valido en test_config_modifier.py

* test[#2]: agregando test test_incrementar_version en test_config_modifier.py

* test[#2]: agregando test test_leer_json_invalido en test_config_modifier.py

* test[#2]: agregando test test_incrementar_version_tipo_incorrecto en test_config_modifier.py

---------

Co-authored-by: EdySerrano <edy.serrano.a@uni.pe>
---
 .gitignore                    |  2 +-
 tests/test_config_modifier.py | 44 +++++++++++++++++++++++++++++++++++
 2 files changed, 45 insertions(+), 1 deletion(-)

diff --git a/.gitignore b/.gitignore
index 3cf8c6d..b0b4ebb 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,2 +1,2 @@
-env
+pc3
 __pycache__
\ No newline at end of file
diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index e69de29..756a899 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -0,0 +1,44 @@
+# tests/test_config_modifier.py
+
+import pytest
+import json
+import os
+from src.config_modifier import leer_json, incrementar_version
+
+@pytest.fixture
+# Preparamos un archivo temporal para pruebas
+def json_de_prueba(tmp_path):
+    file_path = tmp_path / "config.json"
+    data = {"version": 1.0, "name": "Test App"}
+    with open(file_path, 'w') as f:
+        json.dump(data, f)
+    return file_path
+
+# Preparamos un archivo JSON valido para probar la lectura correcta
+def test_leer_json_valido(json_de_prueba):
+    contenido = leer_json(json_de_prueba)
+    assert contenido["version"] == 1.0
+    assert contenido["name"] == "Test App"
+
+# Preparamos un archivo JSON con el campo 'version' valido para probar el incremento de version
+def test_incrementar_version(json_de_prueba):
+    nueva_version = incrementar_version(json_de_prueba)
+    assert nueva_version == 2.0
+    with open(json_de_prueba) as f:
+        datos = json.load(f)
+    assert datos["version"] == 2.0
+
+#Preparamos un archivo  con contenido invalido (no JSON)
+def test_leer_json_invalido(tmp_path):
+    file_path = tmp_path / "invalido.json"
+    file_path.write_text("esto no es json")
+    with pytest.raises(ValueError):
+        leer_json(file_path)
+
+# Preparamos un archivo JSON con campo 'version' de tipo incorrecto
+def test_incrementar_version_tipo_incorrecto(tmp_path):
+    file_path = tmp_path / "version_invalida.json"
+    with open(file_path, 'w') as f:
+        json.dump({"version": "uno"}, f)
+    with pytest.raises(TypeError):
+        incrementar_version(file_path)
\ No newline at end of file
-- 
2.45.1.windows.1


From c19091e1fffb0d272a608fdd8b49751312f92d81 Mon Sep 17 00:00:00 2001
From: Edy <166039525+EdySerrano@users.noreply.github.com>
Date: Mon, 9 Jun 2025 00:07:33 -0500
Subject: [PATCH 10/15] merge[#3]: feature/workflow a feature/develop (#9)

---
 .github/workflows/pr_validation.yaml | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/.github/workflows/pr_validation.yaml b/.github/workflows/pr_validation.yaml
index e69de29..68f6206 100644
--- a/.github/workflows/pr_validation.yaml
+++ b/.github/workflows/pr_validation.yaml
@@ -0,0 +1,19 @@
+name: PR Validation  
+
+on:
+  push:              
+  pull_request:     
+
+jobs:
+  placeholder:
+    runs-on: ubuntu-latest   
+
+    steps:
+      - name: Paso de ejemplo (Placeholder)  # el job placeholder es uno vacio
+        run: echo "Workflow placeholder"
+
+      # Aqui se pueden agregar pasos siguientes, como:
+      # - Validacion de formato de codigo (linter)
+      # - Ejecucion de pruebas unitarias
+      # - Validacion de la construccion del proyecto (build)
+  
-- 
2.45.1.windows.1


From 3032b75efa1968e148f5e5d9099a81425e89ae84 Mon Sep 17 00:00:00 2001
From: GermainAN <germainchoquechambi5@gmail.com>
Date: Mon, 9 Jun 2025 00:16:51 -0500
Subject: [PATCH 11/15]  merge[#8]: feature/lint-hook a feature/develop (#10)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

* feat[#5]: agregar script para validar codigo Python con flake8

* feat[#5]: añadir validacion de scripts bash con shellcheck

* feat[#5]:: añadir validacion con tflint para IaC

* feat[#8]: implementar hook para validar el formato del mensaje del commit

* feat[#8]: implementar hook pre-push para prevenir push con errores
---
 hooks/commit-msg    | 16 ++++++++++++++++
 hooks/pre-push      | 13 +++++++++++++
 requirements.txt    |  3 ++-
 scripts/lint_all.sh | 44 ++++++++++++++++++++++++++++++++++++++++++++
 4 files changed, 75 insertions(+), 1 deletion(-)
 create mode 100644 hooks/commit-msg
 create mode 100644 hooks/pre-push
 mode change 100644 => 100755 scripts/lint_all.sh

diff --git a/hooks/commit-msg b/hooks/commit-msg
new file mode 100644
index 0000000..9b53516
--- /dev/null
+++ b/hooks/commit-msg
@@ -0,0 +1,16 @@
+#!/bin/bash
+
+commit_message=$(cat "$1")
+
+commit_tipo1='^[A-Z]{3,5}-[0-9]+: .+'
+commit_tipo2='^(feat|fix|docs|style|refactor|perf|test|chore)(\([a-z0-9\-]+\))?: .+'
+
+
+if ! [[ "$commit_message" =~ $commit_tipo1 || "$commit_message" =~ $commit_tipo2 ]]; then
+    echo "El mensaje de commit no cumple con el formato requerido"
+    echo "commits validos"
+    echo "PROY-123: descripcion"
+    echo "tipo[#]: descripcion clara"
+    echo "tipos: feat, fix, docs, style, refactor, perf, test, chore"
+    exit 1
+fi
\ No newline at end of file
diff --git a/hooks/pre-push b/hooks/pre-push
new file mode 100644
index 0000000..90ffd24
--- /dev/null
+++ b/hooks/pre-push
@@ -0,0 +1,13 @@
+#!/bin/bash
+
+echo "Ejecutando lint_all.sh antes del push"
+echo "*************************************"
+echo "*************************************"
+
+if ! ./scripts/lint_all.sh; then
+  echo "*************************************"
+  echo "*************************************"
+  echo "hubo un error al ejecutar el ./scripts/lint_all.sh"
+  echo "push cancelado"
+  exit 1
+fi
\ No newline at end of file
diff --git a/requirements.txt b/requirements.txt
index 55b033e..036d8c5 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1 +1,2 @@
-pytest
\ No newline at end of file
+pytest
+flake8
\ No newline at end of file
diff --git a/scripts/lint_all.sh b/scripts/lint_all.sh
old mode 100644
new mode 100755
index f1f641a..2b860f8
--- a/scripts/lint_all.sh
+++ b/scripts/lint_all.sh
@@ -1 +1,45 @@
 #!/usr/bin/env bash
+
+cd "$(dirname "$0")/.." || exit
+
+errores=0 
+
+echo "Ejecutando flake8"
+if flake8 src/ tests/ ./*.py --max-line-length=88 --select=E,W,F; then
+  echo "No se encontraron errores con flake8"
+else
+  echo "flake8 encontro errores"
+  errores=1
+fi
+
+echo "*********************"
+echo "Ejecutando shellcheck"
+if shellcheck scripts/* hooks/*; then 
+  echo "No se encontraron errores con shellcheck"
+else
+  echo "shellcheck encontro errores"
+  errores=1
+fi
+
+echo "*********************"
+echo "Ejecutando tflint"
+if [ -d "iac" ]; then
+  if tflint --enable-all iac/; then
+    echo "No se encontraron errores con tflint"
+  else
+    echo "tflint encontro errores"
+    errores=1
+  fi
+else
+  echo "No se encontro el directorio de IaC"
+fi
+
+echo "*********************"
+echo "Resultado Final:"
+if [ $errores -eq 1 ]; then
+  echo "Se encontraron errores"
+  exit 1
+else
+  echo "Todos los lint pasaron correctamente"
+  exit 0
+fi
\ No newline at end of file
-- 
2.45.1.windows.1


From 8d8e2c71f553913cd3696ed8b3ea982e54ecc399 Mon Sep 17 00:00:00 2001
From: Edy <166039525+EdySerrano@users.noreply.github.com>
Date: Mon, 9 Jun 2025 18:30:33 -0500
Subject: [PATCH 12/15] Actualizacion de test_config_modifier.py

Ocurrio un problema con el pytest y windows pero ya se soluciono
---
 tests/test_config_modifier.py | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index 756a899..39e9821 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -2,7 +2,10 @@
 
 import pytest
 import json
+import sys
 import os
+sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src')))
+
 from src.config_modifier import leer_json, incrementar_version
 
 @pytest.fixture
@@ -41,4 +44,4 @@ def test_incrementar_version_tipo_incorrecto(tmp_path):
     with open(file_path, 'w') as f:
         json.dump({"version": "uno"}, f)
     with pytest.raises(TypeError):
-        incrementar_version(file_path)
\ No newline at end of file
+        incrementar_version(file_path)
-- 
2.45.1.windows.1


From 5864808521617bdde65155a8dcf318cdd8b6d439 Mon Sep 17 00:00:00 2001
From: Edy <166039525+EdySerrano@users.noreply.github.com>
Date: Wed, 11 Jun 2025 10:01:15 -0500
Subject: [PATCH 13/15] merge[#2]: feature/tests  (#11)

* test[#2]: agregando test json_de_prueba en test_config_modifier.py

* test[#2]: agregando test test__leer_json_valido en test_config_modifier.py

* test[#2]: agregando test test_incrementar_version en test_config_modifier.py

* test[#2]: agregando test test_leer_json_invalido en test_config_modifier.py

* test[#2]: agregando test test_incrementar_version_tipo_incorrecto en test_config_modifier.py

* Actualizacion de test_config_modifier.py

Ocurrio un problema con el pytest y windows pero ya se soluciono

---------

Co-authored-by: edysaul20000 <edysaulserrano@gmail.com>
---
 tests/test_config_modifier.py | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index 756a899..7af5bb2 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -2,8 +2,11 @@
 
 import pytest
 import json
+import sys
 import os
-from src.config_modifier import leer_json, incrementar_version
+sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src')))
+
+from config_modifier import leer_json, incrementar_version
 
 @pytest.fixture
 # Preparamos un archivo temporal para pruebas
@@ -41,4 +44,4 @@ def test_incrementar_version_tipo_incorrecto(tmp_path):
     with open(file_path, 'w') as f:
         json.dump({"version": "uno"}, f)
     with pytest.raises(TypeError):
-        incrementar_version(file_path)
\ No newline at end of file
+        incrementar_version(file_path)
-- 
2.45.1.windows.1


From 81380fc8238f788ca3221689e5097b080ab3945d Mon Sep 17 00:00:00 2001
From: Edy <166039525+EdySerrano@users.noreply.github.com>
Date: Fri, 13 Jun 2025 11:32:20 -0500
Subject: [PATCH 14/15] Ajustes de texto en el archivo test_config_modifier.py

---
 tests/test_config_modifier.py | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index 7af5bb2..6616122 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -4,9 +4,10 @@ import pytest
 import json
 import sys
 import os
-sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src')))
-
 from config_modifier import leer_json, incrementar_version
+sys.path.insert(0, os.path.abspath(
+    os.path.join(os.path.dirname(__file__), '..', 'src')))
+
 
 @pytest.fixture
 # Preparamos un archivo temporal para pruebas
@@ -17,13 +18,16 @@ def json_de_prueba(tmp_path):
         json.dump(data, f)
     return file_path
 
+
 # Preparamos un archivo JSON valido para probar la lectura correcta
 def test_leer_json_valido(json_de_prueba):
     contenido = leer_json(json_de_prueba)
     assert contenido["version"] == 1.0
     assert contenido["name"] == "Test App"
 
-# Preparamos un archivo JSON con el campo 'version' valido para probar el incremento de version
+
+# Preparamos un archivo JSON con el campo 'version'
+# valido para probar el incremento de version
 def test_incrementar_version(json_de_prueba):
     nueva_version = incrementar_version(json_de_prueba)
     assert nueva_version == 2.0
@@ -31,6 +35,7 @@ def test_incrementar_version(json_de_prueba):
         datos = json.load(f)
     assert datos["version"] == 2.0
 
+
 #Preparamos un archivo  con contenido invalido (no JSON)
 def test_leer_json_invalido(tmp_path):
     file_path = tmp_path / "invalido.json"
@@ -38,6 +43,7 @@ def test_leer_json_invalido(tmp_path):
     with pytest.raises(ValueError):
         leer_json(file_path)
 
+
 # Preparamos un archivo JSON con campo 'version' de tipo incorrecto
 def test_incrementar_version_tipo_incorrecto(tmp_path):
     file_path = tmp_path / "version_invalida.json"
-- 
2.45.1.windows.1


From b2cd9ff880a4a0e6caa909b47e5289ae38c173fd Mon Sep 17 00:00:00 2001
From: Edy <166039525+EdySerrano@users.noreply.github.com>
Date: Sun, 15 Jun 2025 18:37:50 -0500
Subject: [PATCH 15/15] Update test_config_modifier.py

---
 tests/test_config_modifier.py | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/tests/test_config_modifier.py b/tests/test_config_modifier.py
index fd24fdd..a38c04e 100644
--- a/tests/test_config_modifier.py
+++ b/tests/test_config_modifier.py
@@ -5,10 +5,11 @@ import json
 import sys
 import os
 
-from config_modifier import leer_json, incrementar_version
 sys.path.insert(0, os.path.abspath(
     os.path.join(os.path.dirname(__file__), '..', 'src')))
 
+from config_modifier import leer_json, incrementar_version
+
 @pytest.fixture
 # Preparamos un archivo temporal para pruebas
 def json_de_prueba(tmp_path):
-- 
2.45.1.windows.1

